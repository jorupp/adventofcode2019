using System;
using System.Collections.Generic;
using System.Linq;

namespace AoC.Year2019.Day5
{
    public class Part2 : BasePart
    {
        protected void RunScenario(string title, string input, int inputValue)
        {
            RunScenario(title, () =>
            {
                var lines = input.Split(new[] { '\r', '\n' }, StringSplitOptions.RemoveEmptyEntries);
                var initialData = lines[0].Split(',').Select(int.Parse).ToArray();

                Simulate(initialData, inputValue, out var output);

                Console.WriteLine(string.Join(",", output));
            });
        }

        private void Simulate(int[] data, int input, out List<int> output)
        {
            var ip = 0;
            output = new List<int>();

            while (true)
            {
                var i = data[ip];

                int GetParam(int pNum)
                {
                    var pMode = i / (10 * (int)Math.Pow(10, pNum)) % 10;
                    return data[pMode == 0 ? data[ip + pNum] : ip + pNum];
                }
                void SetByParam(int pNum, int value)
                {
                    // don't really need to support parameter mode here, but we will
                    var pMode = i / (10 * (int)Math.Pow(10, pNum)) % 10;
                    data[pMode == 0 ? data[ip + pNum] : ip + pNum] = value;
                }

                switch (i % 100)
                {
                    case 1:
                        SetByParam(3, GetParam(1) + GetParam(2));
                        ip += 4;
                        break;
                    case 2:
                        SetByParam(3, GetParam(1) * GetParam(2));
                        ip += 4;
                        break;
                    case 3:
                        SetByParam(1, input);
                        ip += 2;
                        break;
                    case 4:
                        var oval = GetParam(1);
                        output.Add(oval);
                        ip += 2;
                        if (oval != 0 && data[ip] == 99)
                        {
                            Console.WriteLine("BROKEN");
                        }
                        break;
                    case 5:
                        if (GetParam(1) != 0)
                        {
                            ip = GetParam(2);
                        }
                        else
                        {
                            ip += 3;
                        }
                        break;
                    case 6:
                        if (GetParam(1) == 0)
                        {
                            ip = GetParam(2);
                        }
                        else
                        {
                            ip += 3;
                        }
                        break;
                    case 7:
                        SetByParam(3, GetParam(1) < GetParam(2) ? 1 : 0);
                        ip += 4;
                        break;
                    case 8:
                        SetByParam(3, GetParam(1) == GetParam(2) ? 1 : 0);
                        ip += 4;
                        break;
                    case 99:
                        ip += 1;
                        return;
                    default:
                        throw new NotImplementedException();
                }
            }
        }
        public override void Run()
        {
            RunScenario("initial-1", @"3,9,8,9,10,9,4,9,99,-1,8", 8);
            RunScenario("initial-1", @"3,9,8,9,10,9,4,9,99,-1,8", 7);
            RunScenario("initial-2", @"3,9,7,9,10,9,4,9,99,-1,8", 8);
            RunScenario("initial-2", @"3,9,7,9,10,9,4,9,99,-1,8", 7);
            RunScenario("initial-3", @"3,3,1108,-1,8,3,4,3,99", 8);
            RunScenario("initial-3", @"3,3,1108,-1,8,3,4,3,99", 7);
            RunScenario("initial-4", @"3,3,1107,-1,8,3,4,3,99", 8);
            RunScenario("initial-4", @"3,3,1107,-1,8,3,4,3,99", 7);
            RunScenario("initial-5", @"3,12,6,12,15,1,13,14,13,4,13,99,-1,0,1,9", 0);
            RunScenario("initial-5", @"3,12,6,12,15,1,13,14,13,4,13,99,-1,0,1,9", 1);
            RunScenario("initial-6", @"3,3,1105,-1,9,1101,0,0,12,4,12,99,1", 0);
            RunScenario("initial-6", @"3,3,1105,-1,9,1101,0,0,12,4,12,99,1", 1);
            RunScenario("initial-large", @"3,21,1008,21,8,20,1005,20,22,107,8,21,20,1006,20,31,1106,0,36,98,0,0,1002,21,125,20,4,20,1105,1,46,104,999,1105,1,46,1101,1000,1,20,4,20,1105,1,46,98,99", 7);
            RunScenario("initial-large", @"3,21,1008,21,8,20,1005,20,22,107,8,21,20,1006,20,31,1106,0,36,98,0,0,1002,21,125,20,4,20,1105,1,46,104,999,1105,1,46,1101,1000,1,20,4,20,1105,1,46,98,99", 8);
            RunScenario("initial-large", @"3,21,1008,21,8,20,1005,20,22,107,8,21,20,1006,20,31,1106,0,36,98,0,0,1002,21,125,20,4,20,1105,1,46,104,999,1105,1,46,1101,1000,1,20,4,20,1105,1,46,98,99", 9);
            //return;
            RunScenario("part1", @"3,225,1,225,6,6,1100,1,238,225,104,0,1101,65,73,225,1101,37,7,225,1101,42,58,225,1102,62,44,224,101,-2728,224,224,4,224,102,8,223,223,101,6,224,224,1,223,224,223,1,69,126,224,101,-92,224,224,4,224,1002,223,8,223,101,7,224,224,1,223,224,223,1102,41,84,225,1001,22,92,224,101,-150,224,224,4,224,102,8,223,223,101,3,224,224,1,224,223,223,1101,80,65,225,1101,32,13,224,101,-45,224,224,4,224,102,8,223,223,101,1,224,224,1,224,223,223,1101,21,18,225,1102,5,51,225,2,17,14,224,1001,224,-2701,224,4,224,1002,223,8,223,101,4,224,224,1,223,224,223,101,68,95,224,101,-148,224,224,4,224,1002,223,8,223,101,1,224,224,1,223,224,223,1102,12,22,225,102,58,173,224,1001,224,-696,224,4,224,1002,223,8,223,1001,224,6,224,1,223,224,223,1002,121,62,224,1001,224,-1302,224,4,224,1002,223,8,223,101,4,224,224,1,223,224,223,4,223,99,0,0,0,677,0,0,0,0,0,0,0,0,0,0,0,1105,0,99999,1105,227,247,1105,1,99999,1005,227,99999,1005,0,256,1105,1,99999,1106,227,99999,1106,0,265,1105,1,99999,1006,0,99999,1006,227,274,1105,1,99999,1105,1,280,1105,1,99999,1,225,225,225,1101,294,0,0,105,1,0,1105,1,99999,1106,0,300,1105,1,99999,1,225,225,225,1101,314,0,0,106,0,0,1105,1,99999,1008,226,677,224,102,2,223,223,1005,224,329,1001,223,1,223,7,677,226,224,102,2,223,223,1006,224,344,1001,223,1,223,1007,226,677,224,1002,223,2,223,1006,224,359,1001,223,1,223,1007,677,677,224,102,2,223,223,1005,224,374,1001,223,1,223,108,677,677,224,102,2,223,223,1006,224,389,101,1,223,223,8,226,677,224,102,2,223,223,1005,224,404,101,1,223,223,7,226,677,224,1002,223,2,223,1005,224,419,101,1,223,223,8,677,226,224,1002,223,2,223,1005,224,434,101,1,223,223,107,677,677,224,1002,223,2,223,1006,224,449,101,1,223,223,7,677,677,224,1002,223,2,223,1006,224,464,101,1,223,223,1107,226,226,224,102,2,223,223,1006,224,479,1001,223,1,223,1007,226,226,224,102,2,223,223,1006,224,494,101,1,223,223,108,226,677,224,1002,223,2,223,1006,224,509,101,1,223,223,1108,226,677,224,102,2,223,223,1006,224,524,1001,223,1,223,1008,226,226,224,1002,223,2,223,1005,224,539,101,1,223,223,107,226,226,224,102,2,223,223,1006,224,554,101,1,223,223,8,677,677,224,102,2,223,223,1005,224,569,101,1,223,223,107,226,677,224,102,2,223,223,1005,224,584,101,1,223,223,1108,226,226,224,1002,223,2,223,1005,224,599,1001,223,1,223,1008,677,677,224,1002,223,2,223,1005,224,614,101,1,223,223,1107,226,677,224,102,2,223,223,1005,224,629,101,1,223,223,1108,677,226,224,1002,223,2,223,1005,224,644,1001,223,1,223,1107,677,226,224,1002,223,2,223,1006,224,659,1001,223,1,223,108,226,226,224,102,2,223,223,1006,224,674,101,1,223,223,4,223,99,226", 5);

        }
    }
}
